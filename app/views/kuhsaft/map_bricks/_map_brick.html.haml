%script{ src: "//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry", type: "text/javascript" }
%script{ src: '//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js', type: 'text/javascript' }
%script{ src: '//google-maps-utility-library-v3.googlecode.com/svn/trunk/richmarker/src/richmarker-compiled.js', type: 'text/javascript' }

.row{ :class => map_brick.to_style_class }
  .columns.small-12
    .map-container
      #map

:coffee
  window.mrkrs = []

- Mappin.all.each do |pin|
  :coffee
    window.mrkrs.push(
      {
        lat: "#{pin.lat}"
        lng: "#{pin.lng}"
        custom_marker: "#{pin.marker_text}"
      }
    )


:coffee
  class CustomMarkerBuilder extends Gmaps.Google.Builders.Marker
    create_marker: ->
      options = _.extend @marker_options(), @rich_marker_options()
      @serviceObject = new RichMarker options

    rich_marker_options: ->
      marker = document.createElement("div")
      marker.setAttribute('class', 'custom_marker')
      marker.innerHTML = this.args.custom_marker
      { content: marker }

    create_infowindow: ->
      return null unless _.isString @args.custom_infowindow

      boxText = document.createElement("div")
      boxText.setAttribute("class", 'custom_infowindow_content')
      boxText.innerHTML = @args.custom_infowindow
      @infowindow = new InfoBox(@infobox(boxText))

    infobox: (boxText)->
      content: boxText
      pixelOffset: new google.maps.Size(-140, 0)
      boxStyle:
        width: "280px"

  dem_markers = [
    {
      lat: 47.5
      lng: 8.7
      custom_marker: 'dynamic'
      html_string: 'someclass'
    }
  ]


  handler = Gmaps.build('Google', builders: { Marker: CustomMarkerBuilder } )
  handler.buildMap {
    provider: {}
    internal: id: 'map'
  }, ->
    markers = handler.addMarkers(window.mrkrs)
    handler.bounds.extendWith markers
    handler.fitMapToBounds()
    return
